{"version":3,"sources":["ModelRenderer.js","Header/Header.js","Note/Note.js","ConfirmResolve/ConfirmResolve.js","NotesColumn/MainThread/MainThread.js","NotesColumn/Thread/Thread.js","NotesColumn/NotesColumn.js","index.js"],"names":["Model","setModelSize","props","gltf","useLoader","GLTFLoader","useEffect","mroot","scene","bbox","Box3","setFromObject","cent","getCenter","Vector3","size","getSize","maxAxis","Math","max","x","y","z","scale","multiplyScalar","position","copy","object","Controls","cameraPosition","modelSize","controls","updateCamera","target","camera","set","current","update","useThree","domElement","gl","setLength","toArray","focus","console","log","ref","args","ModelRenderer","setCamera","setOrbitControls","useState","undefined","useRef","fov","near","onCreated","outputEncoding","sRGBEncoding","background","Color","minDistance","maxDistance","fallback","extend","OrbitControls","Header","className","onClick","alert","alt","src","React","Component","addDays","date","days","result","Date","valueOf","setDate","getDate","Note","selected","pin","white","author","comment","thread","onResolve","onReply","showReply","style","backgroundColor","color","event","stopPropagation","dateInMillis","today","toDateString","toLocaleTimeString","navigator","language","timeStyle","toLocaleDateString","dateStyle","dateString","length","replyString","children","ConfirmResolve","isModalOpen","onCancel","id","MainThread","notes","onSubmitComment","onSelect","onDeselect","onResolveNote","onReplyNote","setSelected","resolveNoteId","setResolveNoteId","inputComment","setInputComment","placeholder","value","onChange","map","index","note","key","Thread","onReturn","onSubmitReply","replyComment","setReplyComment","deleteNoteId","setDeleteNoteId","autoFocus","onKeyPress","preventDefault","NotesColumn","activeThread","setActiveThread","find","NOTES","getTime","colors","ReactDOM","render","setCameraPosition","setControls","setNotes","floor","random","addComment","addReply","filter","deleteNote","document","getElementById"],"mappings":"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","file":"static/js/main.73f5f712.chunk.js","sourcesContent":["import React, { Suspense, useRef, useState, useEffect } from \"react\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { Canvas, useThree, extend, useLoader } from \"react-three-fiber\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { Box3, Vector3, Color, sRGBEncoding } from \"three\";\r\n\r\nextend({ OrbitControls });\r\n\r\nfunction Model({ setModelSize, ...props }) {\r\n  const gltf = useLoader(GLTFLoader, \"models/gltf/nike_shoe/scene.gltf\");\r\n\r\n  useEffect(() => {\r\n    //const maxVector = new Box3().setFromObject(gltf.scene).max;\r\n    //setModelSize(maxVector.length());\r\n\r\n    //Centering Object\r\n    var mroot = gltf.scene;\r\n    var bbox = new Box3().setFromObject(mroot);\r\n    var cent = bbox.getCenter(new Vector3());\r\n    var size = bbox.getSize(new Vector3());\r\n\r\n    //Rescale the object to normalized space\r\n    var maxAxis = Math.max(size.x, size.y, size.z);\r\n    mroot.scale.multiplyScalar(5.0 / maxAxis);\r\n    bbox.setFromObject(mroot);\r\n    bbox.getCenter(cent);\r\n    bbox.getSize(size);\r\n    mroot.position.copy(cent).multiplyScalar(-1);\r\n  }, [gltf, setModelSize]);\r\n\r\n  return <primitive object={gltf.scene} {...props} />;\r\n}\r\n\r\nfunction Controls({ cameraPosition, modelSize, controls, ...props }) {\r\n  function updateCamera(position, target, camera, controls) {\r\n    camera.position.set(...position);\r\n    controls.current.target.set(...target);\r\n    controls.current.update();\r\n  }\r\n\r\n  const {\r\n    camera,\r\n    gl: { domElement }\r\n  } = useThree();\r\n\r\n  useEffect(() => {\r\n    if (modelSize) {\r\n      updateCamera(\r\n        new Vector3(1, 0.5, 1).setLength(2 * modelSize).toArray(),\r\n        [0, 0, 0],\r\n        camera,\r\n        controls\r\n      );\r\n    }\r\n  }, [camera, modelSize, controls]);\r\n\r\n  useEffect(() => {\r\n    if (cameraPosition) {\r\n      updateCamera(\r\n        cameraPosition.position,\r\n        cameraPosition.focus,\r\n        camera,\r\n        controls\r\n      );\r\n      console.log(cameraPosition);\r\n    }\r\n  }, [camera, cameraPosition, controls]);\r\n\r\n  console.log(cameraPosition);\r\n  return (\r\n    <orbitControls ref={controls} args={[camera, domElement]} {...props} />\r\n  );\r\n}\r\n\r\nexport function ModelRenderer({\r\n  cameraPosition,\r\n  setCamera,\r\n  setOrbitControls,\r\n  ...props\r\n}) {\r\n  const [modelSize, setModelSize] = useState(undefined);\r\n\r\n  const controls = useRef();\r\n  useEffect(() => {\r\n    setOrbitControls(controls.current);\r\n  }, [controls, setOrbitControls]);\r\n\r\n  return (\r\n    <Canvas\r\n      camera={{ fov: 60, near: 1 }}\r\n      onCreated={({ gl, scene, camera }) => {\r\n        gl.outputEncoding = sRGBEncoding;\r\n        scene.background = new Color(0xfafafa);\r\n\r\n        setCamera(camera);\r\n      }}\r\n      {...props}\r\n    >\r\n      <Controls\r\n        cameraPosition={cameraPosition}\r\n        modelSize={modelSize}\r\n        controls={controls}\r\n        minDistance={1}\r\n        maxDistance={modelSize ? 5 * modelSize : 50}\r\n      />\r\n      <ambientLight />\r\n      <Suspense fallback={null}>\r\n        <Model setModelSize={setModelSize} />\r\n      </Suspense>\r\n    </Canvas>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"head\">\r\n        <div className=\"greeting-row\">\r\n          <span className=\"greeting\">Welcome Greg!</span>\r\n        </div>\r\n        <div className=\"button-row\">\r\n          <div className=\"buttons\">\r\n            <button\r\n              className=\"share\"\r\n              onClick={() => alert(\"share link copied\")}\r\n            >\r\n              <span className=\"textShare\">Share</span>\r\n            </button>\r\n            <button\r\n              className=\"AR\"\r\n              onClick={() => alert(\"more features to come\")}\r\n            >\r\n              <span className=\"textAR\">AR</span>\r\n            </button>\r\n          </div>\r\n          <img\r\n            className=\"profile\"\r\n            alt=\"Greg\"\r\n            src=\"https://assets.website-files.com/5d3152346d95065922960b3a/5db769036b1dff3418bffd20_Greg.jpg\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Note.css\";\r\n\r\nexport function addDays(date, days) {\r\n  const result = new Date(date.valueOf());\r\n  result.setDate(date.getDate() + days);\r\n  return result;\r\n}\r\n\r\nfunction dateString(dateInMillis) {\r\n  const today = new Date();\r\n  const date = new Date(dateInMillis);\r\n\r\n  if (today.toDateString() === date.toDateString()) {\r\n    return `${date.toLocaleTimeString(navigator.language, {\r\n      timeStyle: \"short\"\r\n    })} Today`;\r\n  } else if (today.toDateString() === addDays(date, 1).toDateString()) {\r\n    return \"Yesterday\";\r\n  } else {\r\n    return date.toLocaleDateString(navigator.language, { dateStyle: \"medium\" });\r\n  }\r\n}\r\n\r\nfunction replyString(thread) {\r\n  if (thread && thread.length > 0) {\r\n    if (thread.length > 1) {\r\n      return `${thread.length} Replies`;\r\n    } else {\r\n      return \"1 Reply\";\r\n    }\r\n  } else {\r\n    return \"Reply\";\r\n  }\r\n}\r\n\r\nexport function Note({\r\n  selected,\r\n  white,\r\n  pin,\r\n  author,\r\n  date,\r\n  comment,\r\n  thread,\r\n  onResolve,\r\n  onReply,\r\n  showReply = true,\r\n  ...props\r\n}) {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className={selected ? \"selected-bar\" : \"\"}></div>\r\n      <div className={\"note\" + (selected ? \" selected\" : \"\")} {...props}>\r\n        <div className={\"note-content\" + (selected ? \" selected\" : \"\")}>\r\n          <div className=\"note-top-row\">\r\n            <img\r\n              className=\"pin-color\"\r\n              alt=\"\"\r\n              style={{ backgroundColor: pin.color }}\r\n            />\r\n            <div className=\"note-top-column\">\r\n              <div className=\"author-row\">\r\n                <div className=\"author-name\">{author}</div>\r\n                <button\r\n                  className={\"resolve\" + (thread ? \" main-comment\" : \"\")}\r\n                  onClick={event => {\r\n                    event.stopPropagation();\r\n                    onResolve();\r\n                  }}\r\n                >\r\n                  Resolve\r\n                </button>\r\n              </div>\r\n              <div className=\"note-date\">{dateString(date)}</div>\r\n            </div>\r\n          </div>\r\n          <p className=\"comment\">{comment}</p>\r\n          {showReply ? (\r\n            <div className=\"reply-row\">\r\n              <button\r\n                className=\"reply-button\"\r\n                onClick={event => {\r\n                  event.stopPropagation();\r\n                  onReply();\r\n                }}\r\n              >\r\n                {replyString(thread)}\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./ConfirmResolve.css\";\r\n\r\nexport function ConfirmResolve({ isModalOpen, onCancel, onResolve, ...props }) {\r\n  return (\r\n    <div id=\"modal\" className={isModalOpen ? \"\" : \"hide\"} onClick={onCancel}>\r\n      <div\r\n        id=\"modal-dialog\"\r\n        onClick={event => event.stopPropagation()}\r\n        {...props}\r\n      >\r\n        <span id=\"modal-warning\">Are you sure you want to resolve?</span>\r\n        <div id=\"modal-actions\">\r\n          <span\r\n            id=\"modal-cancel\"\r\n            onClick={event => {\r\n              event.stopPropagation();\r\n              onCancel();\r\n            }}\r\n          >\r\n            Cancel\r\n          </span>\r\n          <span\r\n            id=\"modal-submit\"\r\n            onClick={event => {\r\n              event.stopPropagation();\r\n              onResolve();\r\n            }}\r\n          >\r\n            Submit\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport TextareaAutosize from \"react-autosize-textarea/lib\";\r\nimport { Note } from \"../../Note/Note\";\r\nimport { ConfirmResolve } from \"../../ConfirmResolve/ConfirmResolve\";\r\nimport \"./MainThread.css\";\r\n\r\nexport function MainThread({\r\n  notes,\r\n  onSubmitComment,\r\n  onSelect,\r\n  onDeselect,\r\n  onResolveNote,\r\n  onReplyNote,\r\n  ...props\r\n}) {\r\n  const [selected, setSelected] = useState(null);\r\n  const [resolveNoteId, setResolveNoteId] = useState(null);\r\n  const [inputComment, setInputComment] = useState(undefined);\r\n\r\n  return (\r\n    <div id=\"notes-column\" {...props}>\r\n      <div id=\"input-column\">\r\n        <span id=\"input-label\">Comments</span>\r\n        <TextareaAutosize\r\n          id=\"input-comment\"\r\n          placeholder=\"Add a comment\"\r\n          value={inputComment}\r\n          onChange={event => setInputComment(event.target.value)}\r\n        />\r\n        <div id=\"input-actions\">\r\n          <button\r\n            id=\"input-cancel\"\r\n            className={inputComment ? \"enabled\" : \"\"}\r\n            onClick={() => inputComment && setInputComment(\"\")}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            id=\"input-submit\"\r\n            className={inputComment ? \"enabled\" : \"\"}\r\n            onClick={() => {\r\n              if (inputComment) {\r\n                onSubmitComment(inputComment);\r\n                setInputComment(\"\");\r\n              }\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"scroll-column\">\r\n        {notes.map(({ id, camera, ...note }, index) => (\r\n          <Note\r\n            key={id}\r\n            selected={id === selected}\r\n            white={index % 2 === 1}\r\n            onClick={() => {\r\n              if (selected === id) {\r\n                onDeselect();\r\n                setSelected(null);\r\n              } else {\r\n                onSelect(camera);\r\n                setSelected(id);\r\n              }\r\n            }}\r\n            onResolve={() => setResolveNoteId(id)}\r\n            onReply={comment => {\r\n              setSelected(id);\r\n              onReplyNote(id, comment);\r\n            }}\r\n            {...note}\r\n          ></Note>\r\n        ))}\r\n      </div>\r\n      <ConfirmResolve\r\n        isModalOpen={resolveNoteId}\r\n        onCancel={() => setResolveNoteId(null)}\r\n        onResolve={() => {\r\n          onResolveNote(resolveNoteId);\r\n          setResolveNoteId(null);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./Thread.css\";\r\nimport { Note } from \"../../Note/Note\";\r\nimport TextareaAutosize from \"react-autosize-textarea/lib\";\r\nimport { ConfirmResolve } from \"../../ConfirmResolve/ConfirmResolve\";\r\n\r\nexport function Thread({\r\n  note,\r\n  onReturn,\r\n  onSubmitReply,\r\n  onResolveNote,\r\n  ...props\r\n}) {\r\n  const [replyComment, setReplyComment] = useState(undefined);\r\n  const [deleteNoteId, setDeleteNoteId] = useState(null);\r\n\r\n  return note ? (\r\n    <div id=\"thread-column\" {...props}>\r\n      <div\r\n        id=\"back-to-comments-row\"\r\n        onClick={() => {\r\n          onReturn();\r\n          setReplyComment(\"\");\r\n        }}\r\n      >\r\n        <i id=\"back-to-comments-icon\" className=\"material-icons\">\r\n          chevron_left\r\n        </i>\r\n        Back to all comments\r\n      </div>\r\n      <Note\r\n        selected\r\n        onResolve={() => setDeleteNoteId(note.id)}\r\n        showReply={false}\r\n        {...note}\r\n      >\r\n        <TextareaAutosize\r\n          id=\"reply-comment\"\r\n          placeholder=\"Add a reply\"\r\n          autoFocus\r\n          value={replyComment}\r\n          onChange={event => setReplyComment(event.target.value)}\r\n          onKeyPress={event => {\r\n            if (event.key === \"Enter\") {\r\n              event.preventDefault();\r\n              onSubmitReply(note.id, replyComment);\r\n              setReplyComment(\"\");\r\n            }\r\n          }}\r\n        />\r\n      </Note>\r\n      <div className=\"scroll-column\">\r\n        {note &&\r\n          note.thread.map(note => (\r\n            <Note\r\n              key={note.id}\r\n              white\r\n              onResolve={() => setDeleteNoteId(note.id)}\r\n              showReply={false}\r\n              {...note}\r\n            />\r\n          ))}\r\n      </div>\r\n      <ConfirmResolve\r\n        isModalOpen={deleteNoteId}\r\n        onCancel={() => setDeleteNoteId(null)}\r\n        onResolve={() => {\r\n          onResolveNote(deleteNoteId);\r\n          setDeleteNoteId(null);\r\n        }}\r\n      />\r\n    </div>\r\n  ) : null;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { MainThread } from \"./MainThread/MainThread\";\r\nimport \"./NotesColumn.css\";\r\nimport { Thread } from \"./Thread/Thread\";\r\n\r\nexport function NotesColumn({\r\n  notes,\r\n  onSelect,\r\n  onDeselect,\r\n  onSubmitComment,\r\n  onSubmitReply,\r\n  ...props\r\n}) {\r\n  const [activeThread, setActiveThread] = useState(null);\r\n\r\n  if (\r\n    activeThread &&\r\n    notes.find(({ id }) => id === activeThread) === undefined\r\n  ) {\r\n    setActiveThread(null);\r\n  }\r\n\r\n  return (\r\n    <div id=\"notes-row\">\r\n      <MainThread\r\n        className={\r\n          \"main-thread\" + (activeThread ? \" main-thread-inactive\" : \"\")\r\n        }\r\n        notes={notes}\r\n        onSelect={onSelect}\r\n        onDeselect={onDeselect}\r\n        onSubmitComment={onSubmitComment}\r\n        onReplyNote={id => {\r\n          onSelect(notes.find(note => note.id === id).camera);\r\n          setActiveThread(id);\r\n        }}\r\n        {...props}\r\n      />\r\n      <Thread\r\n        className={\r\n          \"active-thread\" + (!activeThread ? \" active-thread-inactive\" : \"\")\r\n        }\r\n        note={notes.find(note => note.id === activeThread)}\r\n        onReturn={() => setActiveThread(null)}\r\n        onSubmitReply={onSubmitReply}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ModelRenderer } from \"./ModelRenderer\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\";\r\nimport Header from \"./Header/Header\";\r\nimport { NotesColumn } from \"./NotesColumn/NotesColumn\";\r\nimport { addDays } from \"./Note/Note\";\r\n\r\nconst NOTES = [\r\n  {\r\n    id: 1,\r\n    camera: {\r\n      position: [3.6724893617668513, 0.10448181831762553, -0.10443959458119491],\r\n      focus: [0, 0, 0]\r\n    },\r\n    pin: {\r\n      color: \"#ff7a7a\"\r\n    },\r\n    author: \"Palvi Mehta,\",\r\n    date: new Date().getTime(),\r\n    comment:\r\n      \"I dont like how the openings end before the bottom of the black canvas, what can we do about this?\",\r\n    thread: []\r\n  },\r\n  {\r\n    id: 2,\r\n    camera: {\r\n      position: [-0.2391278466290959, 0.2413250726086689, 1.7599386342780603],\r\n      focus: [0, 0, 0]\r\n    },\r\n    pin: {\r\n      color: \"#ffe279\"\r\n    },\r\n    author: \"Ed Lazowska\",\r\n    date: addDays(new Date(), -1).getTime(),\r\n    comment:\r\n      \"I'm really proud of the lacing design here, do we think it will be too complicated?\",\r\n    thread: []\r\n  },\r\n  {\r\n    id: 3,\r\n    camera: {\r\n      position: [\r\n        1.2556252511652628,\r\n        -1.8845128318655633,\r\n        -0.006335531414734807\r\n      ],\r\n      focus: [1.2637327202535016, 0, -0.09982552431336995]\r\n    },\r\n    pin: {\r\n      color: \"#ffc37c\"\r\n    },\r\n    author: \" Kabir Shahani\",\r\n    date: addDays(new Date(), -2).getTime(),\r\n    comment:\r\n      \"I love the differnent fonts, but make the nike and zoom closer together in size\",\r\n    thread: []\r\n  }\r\n];\r\n\r\nconst colors = [\"#c4c4c4\", \"#ff7a7a\", \"#ffe279\", \"#ffc37c\"];\r\n\r\nconst addComment = (notes, camera, controls, comment) => [\r\n  {\r\n    id: 1 + Math.max(...notes.map(({ id }) => id)),\r\n    camera: {\r\n      position: camera.position.toArray(),\r\n      focus: controls.target.toArray()\r\n    },\r\n    pin: { color: colors[Math.floor(Math.random() * colors.length)] },\r\n    author: \"Greg Gottesman\",\r\n    date: new Date().getTime(),\r\n    comment: comment,\r\n    thread: []\r\n  },\r\n  ...notes\r\n];\r\n\r\nconst addReply = (notes, id, comment) =>\r\n  notes.map(({ thread, ...note }) =>\r\n    note.id === id\r\n      ? {\r\n          ...note,\r\n          thread: [\r\n            {\r\n              id: 1 + Math.max(id, ...thread.map(({ id }) => id)),\r\n              pin: { color: note.pin.color },\r\n              author: \"Greg Gottesman\",\r\n              date: new Date().getTime(),\r\n              comment: comment\r\n            },\r\n            ...thread\r\n          ]\r\n        }\r\n      : { thread, ...note }\r\n  );\r\n\r\nconst deleteNote = (id, notes) =>\r\n  notes\r\n    .filter(note => note.id !== id)\r\n    .map(({ thread, ...note }) => ({\r\n      thread: thread.filter(note => note.id !== id),\r\n      ...note\r\n    }));\r\n\r\nfunction MainPage() {\r\n  const [cameraPosition, setCameraPosition] = useState(undefined);\r\n  const [camera, setCamera] = useState(undefined);\r\n  const [controls, setControls] = useState(undefined);\r\n  const [notes, setNotes] = useState(NOTES);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div id=\"main-area\">\r\n        <div id=\"variations-column\"></div>\r\n        <ModelRenderer\r\n          id=\"three-renderer\"\r\n          cameraPosition={cameraPosition}\r\n          setCamera={camera => setCamera(camera)}\r\n          setOrbitControls={controls => setControls(controls)}\r\n        />\r\n        <NotesColumn\r\n          notes={notes}\r\n          onSubmitComment={comment =>\r\n            setNotes(addComment(notes, camera, controls, comment))\r\n          }\r\n          onSubmitReply={(id, comment) =>\r\n            setNotes(addReply(notes, id, comment))\r\n          }\r\n          onSelect={cameraPosition => setCameraPosition(cameraPosition)}\r\n          onDeselect={() => setCameraPosition(null)}\r\n          onResolveNote={id => setNotes(deleteNote(id, notes))}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nReactDOM.render(<MainPage />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}