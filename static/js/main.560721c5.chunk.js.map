{"version":3,"sources":["ModelRenderer.js","Header/Header.js","index.js"],"names":["ModelRenderer","props","setCameraPosition","bind","start","stop","animate","this","scene","THREE","background","camera","window","innerWidth","innerHeight","position","set","lookAt","renderer","antialias","outputEncoding","setSize","controls","OrbitControls","domElement","minDistance","maxDistance","maxPolarAngle","Math","PI","GLTFLoader","setPath","load","gltf","add","xhr","console","log","loaded","total","error","mount","appendChild","nextProps","nextState","param","matrix","fromArray","decompose","quaternion","scale","removeChild","frameId","requestAnimationFrame","cancelAnimationFrame","renderScene","cameraState","JSON","stringify","toArray","render","ref","Component","Header","React","MainPage","Container","style","border","Row","Col","xs","click","Button","onClick","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.560721c5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nclass ModelRenderer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.setCameraPosition = this.setCameraPosition.bind(this);\r\n    this.start = this.start.bind(this);\r\n    this.stop = this.stop.bind(this);\r\n    this.animate = this.animate.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Bind Upstream click events\r\n    this.props.setCameraPosition(this.setCameraPosition);\r\n\r\n    //const width = this.mount.clientWidth;\r\n    //const height = this.mount.clientHeight;\r\n\r\n    //Pure ThreeJS code\r\n\r\n    //Scene\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0xcccccc);\r\n\r\n    //Camera\r\n    const camera = new THREE.PerspectiveCamera(\r\n      60,\r\n      window.innerWidth / window.innerHeight,\r\n      1,\r\n      1000\r\n    );\r\n    camera.position.set(-2, 0, -3);\r\n    camera.lookAt(new THREE.Vector3(0, 0, 0)); // Set look at coordinate like this\r\n\r\n    //Renderer- Generally always use webGL\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.outputEncoding = THREE.sRGBEncoding;\r\n    //renderer.setPixelRatio(window.devicePixelRatio);\r\n    renderer.setSize(window.innerWidth * 0.6, window.innerHeight * 0.9);\r\n\r\n    // controls\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n\r\n    //controls.addEventListener( 'change', render ); // call this only in static scenes (i.e., if there is no animation loop)\r\n\r\n    controls.minDistance = 1;\r\n    controls.maxDistance = 500;\r\n    controls.maxPolarAngle = Math.PI;\r\n\r\n    //Import the model\r\n    var loader = new GLTFLoader().setPath(\"models/gltf/microphone/\");\r\n    loader.load(\r\n      \"scene.gltf\",\r\n      gltf => {\r\n        // called when the resource is loaded\r\n        scene.add(gltf.scene);\r\n      },\r\n      xhr => {\r\n        // called while loading is progressing\r\n        console.log(`${(xhr.loaded / xhr.total) * 100}% loaded`);\r\n      },\r\n      error => {\r\n        // called when loading has errors\r\n        console.error(\"An error happened\", error);\r\n      }\r\n    );\r\n    //Bind ThreeJs items to this for use outside componentDidMount\r\n    this.scene = scene;\r\n    this.camera = camera;\r\n    this.controls = controls;\r\n    this.renderer = renderer;\r\n\r\n    //Mount\r\n    this.mount.appendChild(this.renderer.domElement);\r\n\r\n    //Start Animating\r\n    this.start();\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    console.log(\"Update Time\");\r\n    return false;\r\n  }\r\n\r\n  setCameraPosition(param) {\r\n    console.log(\"setting position to:\" + param);\r\n    this.camera.matrix.fromArray(param);\r\n    this.camera.matrix.decompose(\r\n      this.camera.position,\r\n      this.camera.quaternion,\r\n      this.camera.scale\r\n    );\r\n    //this.camera.updateProjectionMatrix();\r\n  }\r\n  componentWillUnmount() {\r\n    this.stop();\r\n    this.mount.removeChild(this.renderer.domElement);\r\n  }\r\n\r\n  start() {\r\n    if (!this.frameId) {\r\n      this.frameId = requestAnimationFrame(this.animate);\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    cancelAnimationFrame(this.frameId);\r\n  }\r\n\r\n  animate() {\r\n    this.renderScene();\r\n    const cameraState = JSON.stringify(this.camera.matrix.toArray());\r\n    console.log(cameraState);\r\n    this.frameId = window.requestAnimationFrame(this.animate);\r\n  }\r\n\r\n  renderScene() {\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        ref={mount => {\r\n          this.mount = mount;\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModelRenderer;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return <div>I am a top bar. please fix me</div>;\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ModelRenderer from \"./ModelRenderer\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\";\r\nimport { Container, Button } from \"react-bootstrap\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport Header from \"./Header/Header\";\r\n\r\nclass MainPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container style={{ border: \"2px solid black\" }}>\r\n        <Row style={{ border: \"2px solid red\" }}>\r\n          <Header />\r\n        </Row>\r\n        <Row>\r\n          <Col style={{ border: \"2px solid green\" }}> </Col>\r\n          <Col xs={9} style={{ border: \"2px solid blue\" }}>\r\n            <ModelRenderer\r\n              setCameraPosition={click => (this.setCameraPosition = click)}\r\n            />\r\n          </Col>\r\n          <Col style={{ border: \"2px solid green\" }}>\r\n            <Button\r\n              onClick={() =>\r\n                this.setCameraPosition([\r\n                  0.8876483038068422,\r\n                  0,\r\n                  0.46052197423015095,\r\n                  0,\r\n                  0.143698258438904,\r\n                  0.9500711177409453,\r\n                  -0.27697595880526665,\r\n                  0,\r\n                  -0.4375286268011064,\r\n                  0.3120334456984873,\r\n                  0.8433290161586208,\r\n                  0,\r\n                  -1.5926282414090294,\r\n                  1.135818886907916,\r\n                  3.0697639552267915,\r\n                  1\r\n                ])\r\n              }\r\n            >\r\n              Position 1\r\n            </Button>\r\n            <Button\r\n              onClick={() =>\r\n                this.setCameraPosition([\r\n                  -0.9990864021979794,\r\n                  0,\r\n                  0.04273594439224533,\r\n                  0,\r\n                  0.026569622732542743,\r\n                  0.7832427130760378,\r\n                  0.6211480560712863,\r\n                  0,\r\n                  -0.033472617031648916,\r\n                  0.6217160544921511,\r\n                  -0.782527144254923,\r\n                  0,\r\n                  -0.1218421651361034,\r\n                  2.2630805983163875,\r\n                  -2.848441800760354,\r\n                  1\r\n                ])\r\n              }\r\n            >\r\n              Position 2\r\n            </Button>\r\n            <Button\r\n              onClick={() =>\r\n                this.setCameraPosition([\r\n                  -0.992904594169215,\r\n                  0,\r\n                  -0.11891369508036442,\r\n                  0,\r\n                  0.11228505451656628,\r\n                  0.32921006243195794,\r\n                  -0.9375568256515217,\r\n                  0,\r\n                  0.03914758498142157,\r\n                  -0.944256710218967,\r\n                  -0.32687418343542496,\r\n                  0,\r\n                  0.14114862496109934,\r\n                  -3.404565985895425,\r\n                  -1.178561629001846,\r\n                  1\r\n                ])\r\n              }\r\n            >\r\n              Position 3\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<MainPage />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}